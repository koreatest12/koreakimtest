name: 
  "
  
  
  Docker Build & Deploy"

on:
  push:
    branches: [ "main" ]
    paths:
      - "Dockerfile"
      - ".github/workflows/docker-build-and-deploy.yml"
      - "package.json"
      - "package-lock.json"
      - "**/*.ts"
      - "**/*.js"
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Tag for the image (default: sha)"
        required: false
        default: ""
      deploy:
        description: "Run deploy step via SSH (true/false)"
        required: false
        default: "false"

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TZ: Asia/Seoul

jobs:
  build-and-push:
    name: Build and push image
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=raw,value=${{ inputs.image_tag }},enable=${{ inputs.image_tag != '' }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to server via SSH
    needs: build-and-push
    if: |
      github.event_name == 'push' && github.ref == 'refs/heads/main' && inputs.deploy == 'true'
    runs-on: ubuntu-24.04
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      CONTAINER_NAME: app
      CONTAINER_PORT: 3000
      HOST_PORT: 3000
    steps:
      - name: Install SSH client
        run: sudo apt-get update -y && sudo apt-get install -y openssh-client

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "$SERVER_HOST" >> ~/.ssh/known_hosts
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}

      - name: Compute image tag
        id: img
        shell: bash
        run: |
          set -Eeuo pipefail
          if [[ -n "${{ inputs.image_tag }}" ]]; then
            echo "tag=${{ inputs.image_tag }}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=sha-${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"
          fi

      - name: Pull and restart container
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          REGISTRY: ${{ env.REGISTRY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          TAG: ${{ steps.img.outputs.tag }}
          CONTAINER_NAME: ${{ env.CONTAINER_NAME }}
          HOST_PORT: ${{ env.HOST_PORT }}
          CONTAINER_PORT: ${{ env.CONTAINER_PORT }}
        run: |
          set -Eeuo pipefail
          REMOTE_IMAGE="${REGISTRY}/${IMAGE_NAME}:${TAG}"
          ssh -o StrictHostKeyChecking=yes "${SERVER_USER}@${SERVER_HOST}" bash -lc "
            set -Eeuo pipefail
            docker login ${REGISTRY} -u '${{ github.actor }}' -p '${{ secrets.GITHUB_TOKEN }}'
            docker pull ${REMOTE_IMAGE}
            docker rm -f ${CONTAINER_NAME} 2>/dev/null || true
            docker run -d --name ${CONTAINER_NAME} \
              -p ${HOST_PORT}:${CONTAINER_PORT} \
              --restart unless-stopped \
              ${REMOTE_IMAGE}
          "
